<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Arm64 on vyorkin.org</title>
    <link>https://vyorkin.org/ru-ru/categories/arm64/</link>
    <description>Recent content in Arm64 on vyorkin.org</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ru-ru</language>
    <lastBuildDate>Wed, 13 Jul 2022 16:19:00 +0300</lastBuildDate>
    <atom:link href="https://vyorkin.org/ru-ru/categories/arm64/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Зелёные потоки в 200 строчек на Rust. Часть 1</title>
      <link>https://vyorkin.org/ru-ru/posts/exploring-async-basics/</link>
      <pubDate>Wed, 13 Jul 2022 16:19:00 +0300</pubDate>
      <guid>https://vyorkin.org/ru-ru/posts/exploring-async-basics/</guid>
      <description>Это вольный перевод-конспект &amp;ldquo;книги&amp;rdquo; Green Threads Explained in 200 Lines of Rust.&#xA;Пользовательские потоки, горутины, файберы &amp;ndash; у них много названий, но далее для простоты мы будем называть их зелёные потоки. Чтобы разобраться как они устроены мы напишем игрушечную реализацию.&#xA;Итак, как мы знаем, есть два вида многозадачности:&#xA;Вытесняющая &amp;ndash; внешний планировщик принимает решения о том когда будет выполняться какой поток и отвечает за переключение между ними. Используется в операционных системах.</description>
    </item>
    <item>
      <title>Программирование для ARM64. Часть 1</title>
      <link>https://vyorkin.org/ru-ru/posts/arm64-assembly-1/</link>
      <pubDate>Tue, 12 Jul 2022 12:10:00 +0300</pubDate>
      <guid>https://vyorkin.org/ru-ru/posts/arm64-assembly-1/</guid>
      <description>Заметка основана на конспектах из книги Programming with 64-bit ARM Assembly Language.&#xA;Регистры X0-X30 &amp;ndash; Регистры общего назначения. X31, SP, XZR &amp;ndash; Указатель стека или нулевой регистр, в зависимости от контекста. X30, LR &amp;ndash; Ссылочный регистр. При вызове функции этот регистр используется для хранения адреса возврата. Не рекомендуется его использовать для чего-либо другого. PC &amp;ndash; Счётчик инструкций. Хранит адрес по которому в памяти расположена выполняемая в данный момент инструкция. Мы не всегда хотим использовать все 64 бита данных регистра, иногда нам достаточно 32 бит.</description>
    </item>
  </channel>
</rss>
