<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>transcendental kyberautism</title>
    <link>https://vyorkin.org/ru-ru/</link>
    <description>Recent content on transcendental kyberautism</description>
    <generator>Hugo</generator>
    <language>ru-ru</language>
    <lastBuildDate>Wed, 13 Jul 2022 16:19:00 +0300</lastBuildDate>
    <atom:link href="https://vyorkin.org/ru-ru/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Зелёные потоки в 200 строчек на Rust. Часть 1</title>
      <link>https://vyorkin.org/ru-ru/posts/exploring-async-basics/</link>
      <pubDate>Wed, 13 Jul 2022 16:19:00 +0300</pubDate>
      <guid>https://vyorkin.org/ru-ru/posts/exploring-async-basics/</guid>
      <description>&lt;p&gt;&lt;em&gt;Это вольный перевод-конспект &amp;ldquo;книги&amp;rdquo; &lt;a href=&#34;https://cfsamson.gitbook.io/green-threads-explained-in-200-lines-of-rust/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Green Threads Explained in 200&#xA;Lines of Rust&lt;/a&gt;&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Пользовательские потоки, горутины, файберы &amp;ndash; у них много&#xA;названий, но далее для простоты мы будем называть их &lt;strong&gt;зелёные&#xA;потоки&lt;/strong&gt;. Чтобы разобраться как они устроены мы напишем&#xA;игрушечную реализацию.&lt;/p&gt;&#xA;&lt;p&gt;Итак, как мы знаем, есть два вида многозадачности:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Вытесняющая&lt;/strong&gt; &amp;ndash; внешний планировщик принимает решения о том&#xA;когда будет выполняться какой поток и отвечает за переключение&#xA;между ними. Используется в операционных системах.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Кооперативная&lt;/strong&gt; &amp;ndash; поток сам решает когда нужно отдать&#xA;процессорное время другим задачам. Это имеет смысл делать при&#xA;ожидании чего-либо, например, мы часто ждём I/O. При&#xA;блокировке поток передаёт управление планировщику, который&#xA;переключается на выполнение другой задачи/потока.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Нас интересует кооперативная.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Программирование для ARM64. Часть 1</title>
      <link>https://vyorkin.org/ru-ru/posts/arm64-assembly-1/</link>
      <pubDate>Tue, 12 Jul 2022 12:10:00 +0300</pubDate>
      <guid>https://vyorkin.org/ru-ru/posts/arm64-assembly-1/</guid>
      <description>&lt;p&gt;&lt;em&gt;Заметка основана на конспектах из книги &lt;a href=&#34;https://link.springer.com/book/10.1007/978-1-4842-5881-1&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Programming&#xA;with 64-bit ARM Assembly Language&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;регистры&#34;&gt;&#xA;  Регистры&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%d1%80%d0%b5%d0%b3%d0%b8%d1%81%d1%82%d1%80%d1%8b&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;X0-X30&lt;/code&gt; &amp;ndash; Регистры общего назначения.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;X31&lt;/code&gt;, &lt;code&gt;SP&lt;/code&gt;, &lt;code&gt;XZR&lt;/code&gt; &amp;ndash; Указатель стека или нулевой регистр, в&#xA;зависимости от контекста.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;X30&lt;/code&gt;, &lt;code&gt;LR&lt;/code&gt; &amp;ndash; Ссылочный регистр. При вызове функции этот&#xA;регистр используется для хранения адреса возврата. Не&#xA;рекомендуется его использовать для чего-либо другого.&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;PC&lt;/code&gt; &amp;ndash; Счётчик инструкций. Хранит адрес по которому в памяти&#xA;расположена выполняемая в данный момент инструкция.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Мы не всегда хотим использовать все 64 бита данных регистра,&#xA;иногда нам достаточно 32 бит. Поэтому существуют удобные&#xA;32-битные регистры &lt;code&gt;W0-W30&lt;/code&gt; и &lt;code&gt;WZR&lt;/code&gt;. Когда мы их используем, то&#xA;верхние 32 бита соответствующего 64-битного регистра&#xA;устанавливаются в 0.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Заметка о Lwt</title>
      <link>https://vyorkin.org/ru-ru/posts/about-lwt/</link>
      <pubDate>Sun, 31 Oct 2021 12:40:00 +0300</pubDate>
      <guid>https://vyorkin.org/ru-ru/posts/about-lwt/</guid>
      <description>&lt;h2 id=&#34;что-такое-lwt&#34;&gt;&#xA;  Что такое Lwt&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%d1%87%d1%82%d0%be-%d1%82%d0%b0%d0%ba%d0%be%d0%b5-lwt&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://github.com/ocsigen/lwt&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Lwt&lt;/a&gt; это одна из наиболее популярных OCaml библиотек,&#xA;разрабатываемая сообществом. По сути это просто реализация&#xA;&lt;a href=&#34;https://en.wikipedia.org/wiki/Cooperative_multitasking&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;кооперативной многозадачности&lt;/a&gt; (как альтернативы &lt;a href=&#34;https://en.wikipedia.org/wiki/Preemption_%28computing%29&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;вытесняющей&#xA;многозадачности&lt;/a&gt;) в OCaml на основе &lt;a href=&#34;https://en.wikipedia.org/wiki/Futures_and_promises&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Promises&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Заметки про типы в Coq (WIP)</title>
      <link>https://vyorkin.org/ru-ru/posts/notes-on-types-in-coq/</link>
      <pubDate>Sun, 31 Oct 2021 12:39:00 +0300</pubDate>
      <guid>https://vyorkin.org/ru-ru/posts/notes-on-types-in-coq/</guid>
      <description>&lt;h2 id=&#34;gallina-и-cic&#34;&gt;&#xA;  Gallina и CIC&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#gallina-%d0%b8-cic&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Формальный язык, который используется в Coq для описания&#xA;математических утверждений и доказательств называется курица&#xA;(Gallina это “курица“ в переводе с испанского на русский). Этот&#xA;язык основан на формализме (разновидности теории типов), который&#xA;называется Исчисление Индуктивных Конструкций (Calculus of&#xA;Inductive Constructions, сокращённо CIC).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Обо мне</title>
      <link>https://vyorkin.org/ru-ru/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://vyorkin.org/ru-ru/about/</guid>
      <description>&lt;p&gt;Привет!&lt;/p&gt;&#xA;&lt;p&gt;Здесь я изредка оставляю записи о том, что нахожу интересным.&#xA;Сейчас это Rust, MEV, безопасность в блокчейнах, разработка&#xA;DeFi-приложений, компиляторы, некоторые &lt;del&gt;функциональные&lt;/del&gt; языки&#xA;программирования, формальные методы и другие клёвые вещи.&lt;/p&gt;&#xA;&lt;p&gt;Иногда что-то пишу &lt;a href=&#34;https://twitter.com/yorkin&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;в твиттере&lt;/a&gt;, но&#xA;крайне редко. Всё, что я делаю в open source можно найти на &lt;a href=&#34;https://github.com/vyorkin&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h2 id=&#34;контакты&#34;&gt;&#xA;  Контакты&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#%d0%ba%d0%be%d0%bd%d1%82%d0%b0%d0%ba%d1%82%d1%8b&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;В основном пользуюсь &lt;a href=&#34;https://t.me/vyorkin&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;telegram&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Можно попробовать написать мне на &lt;a href=&#34;mailto:vasiliy.yorkin@gmail.com&#34; &gt;vasiliy.yorkin@gmail.com&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
  </channel>
</rss>
