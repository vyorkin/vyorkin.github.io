<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ethernaut on transcendental kyberautism</title>
    <link>https://vyorkin.org/tags/ethernaut/</link>
    <description>Recent content in Ethernaut on transcendental kyberautism</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Thu, 04 Aug 2022 12:24:00 +0300</lastBuildDate>
    <atom:link href="https://vyorkin.org/tags/ethernaut/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ethernaut, #14 Gatekeeper One</title>
      <link>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-14-gatekeeper-one/</link>
      <pubDate>Thu, 04 Aug 2022 12:24:00 +0300</pubDate>
      <guid>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-14-gatekeeper-one/</guid>
      <description>&lt;p&gt;To solve this challenge we must register as an entrant.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#007f7f&#34;&gt;// SPDX-License-Identifier: MIT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;pragma solidity&lt;/span&gt; ^&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;8&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;forge-std/console2.sol&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;contract&lt;/span&gt; GatekeeperOne {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; entrant;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;modifier&lt;/span&gt; gateOne() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex; background-color:#191919&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt; != &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;tx&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;origin&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;_&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;modifier&lt;/span&gt; gateTwo() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex; background-color:#191919&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;gasleft&lt;/span&gt;() % &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;8191&lt;/span&gt; == &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;_&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;modifier&lt;/span&gt; gateThree(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bytes8&lt;/span&gt; _gateKey) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;require&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex; background-color:#191919&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint32&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint64&lt;/span&gt;(_gateKey)) == &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint16&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint64&lt;/span&gt;(_gateKey)),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;GatekeeperOne: invalid gateThree part one&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;require&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex; background-color:#191919&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint32&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint64&lt;/span&gt;(_gateKey)) != &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint64&lt;/span&gt;(_gateKey),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;GatekeeperOne: invalid gateThree part two&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;require&lt;/span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex; background-color:#191919&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint32&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint64&lt;/span&gt;(_gateKey)) == &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint16&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint160&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;tx&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;origin&lt;/span&gt;)),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;GatekeeperOne: invalid gateThree part three&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;_&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; enter(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bytes8&lt;/span&gt; _gateKey)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        gateOne&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        gateTwo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        gateThree(_gateKey)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;returns&lt;/span&gt; (&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bool&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex; background-color:#191919&#34;&gt;&lt;span&gt;        entrant = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;tx&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;origin&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex; background-color:#191919&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;analysis-and-exploit&#34;&gt;&#xA;  Analysis &amp;amp; Exploit&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#analysis-and-exploit&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; enter(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bytes8&lt;/span&gt; _gateKey)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    gateOne&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    gateTwo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    gateThree(_gateKey)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;returns&lt;/span&gt; (&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bool&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    entrant = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;tx&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;origin&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;enter&lt;/code&gt; function has 3 modifiers that perform some checks.&#xA;The first two modifiers don&amp;rsquo;t take any parameters and the last&#xA;one expects the &lt;code&gt;bytes8 _gateKey&lt;/code&gt;. On success, it assigns&#xA;&lt;code&gt;tx.origin&lt;/code&gt; to &lt;code&gt;entrant&lt;/code&gt; and returns &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ethernaut, #13 Privacy</title>
      <link>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-13-privacy/</link>
      <pubDate>Thu, 04 Aug 2022 11:27:00 +0300</pubDate>
      <guid>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-13-privacy/</guid>
      <description>&lt;p&gt;&lt;em&gt;The creator of this contract was careful enough to protect the sensitive areas of its storage. Unlock this contract to beat the level.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;// SPDX-License-Identifier: MIT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;pragma solidity&lt;/span&gt; ^&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;8&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;contract&lt;/span&gt; Privacy {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; locked = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; ID = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;block&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;timestamp&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint8&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;private&lt;/span&gt; flattening = &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;10&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint8&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;private&lt;/span&gt; denomination = &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;255&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint16&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;private&lt;/span&gt; awkwardness = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint16&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;block&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;timestamp&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bytes32&lt;/span&gt;[&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;data&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;constructor&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bytes32&lt;/span&gt;[&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;memory&lt;/span&gt; _data) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;data&lt;/span&gt; = _data;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; unlock(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bytes16&lt;/span&gt; _key) &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;require&lt;/span&gt;(_key == &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bytes16&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;data&lt;/span&gt;[&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;2&lt;/span&gt;]));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        locked = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;false&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#007f7f&#34;&gt;/*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;    A bunch of super advanced solidity algorithms...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;      *&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;      .,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;      *.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^         ,---/V\&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;      `*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.    ~|__(o.o)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;      ^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;^`*.,*&amp;#39;  UU  UU&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;  */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;analysis&#34;&gt;&#xA;  Analysis&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#analysis&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s review the &lt;code&gt;unlock&lt;/code&gt; function:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ethernaut, #12 Elevator</title>
      <link>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-12-elevator/</link>
      <pubDate>Wed, 03 Aug 2022 19:58:00 +0300</pubDate>
      <guid>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-12-elevator/</guid>
      <description>&lt;p&gt;To solve this challenge we have to set the &lt;code&gt;top&lt;/code&gt; state variable&#xA;to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;// SPDX-License-Identifier: MIT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;pragma solidity&lt;/span&gt; ^&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;8&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;interface&lt;/span&gt; Building {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; isLastFloor(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt;) &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;external&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;returns&lt;/span&gt; (&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bool&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;contract&lt;/span&gt; Elevator {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; top;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; floor;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; goTo(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt; _floor) &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Building building = Building(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;if&lt;/span&gt; (!building.isLastFloor(_floor)) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            floor = _floor;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            top = building.isLastFloor(floor);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;analysis&#34;&gt;&#xA;  Analysis&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#analysis&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s go over the &lt;code&gt;goTo&lt;/code&gt; function:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ethernaut, #11 Re-entrancy</title>
      <link>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-11-re-entrancy/</link>
      <pubDate>Tue, 02 Aug 2022 11:57:00 +0300</pubDate>
      <guid>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-11-re-entrancy/</guid>
      <description>&lt;p&gt;The objective of this challenge is to steal all the funds from&#xA;the contract.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;// SPDX-License-Identifier: MIT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;pragma solidity&lt;/span&gt; ^&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;8&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;contract&lt;/span&gt; Reentrance {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;mapping&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; =&amp;gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt;) &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; balances;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; donate(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; _to) &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        balances[_to] += &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;value&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; balanceOf(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; _who) &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;view&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;returns&lt;/span&gt; (&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;balance&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;return&lt;/span&gt; balances[_who];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; withdraw(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt; _amount) &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;if&lt;/span&gt; (balances[&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;] &amp;gt;= _amount) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            (&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bool&lt;/span&gt; result, ) = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;call&lt;/span&gt;{&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;value&lt;/span&gt;: _amount}(&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;if&lt;/span&gt; (result) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                _amount;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;unchecked&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                balances[&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;] -= _amount;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    receive() &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;external&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt; {}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Originally this level had the &lt;code&gt;pragma solidity ^0.6.0&lt;/code&gt; and used the&#xA;&lt;a href=&#34;https://docs.openzeppelin.com/contracts/4.x/api/utils#SafeMath&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;SafeMath&lt;/a&gt;&#xA;from OpenZeppelin, which provides wrappers over Solidity’s&#xA;arithmetic operations. We use a is a slightly modified version&#xA;of it that:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ethernaut, #10 King</title>
      <link>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-10-king/</link>
      <pubDate>Mon, 01 Aug 2022 15:56:00 +0300</pubDate>
      <guid>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-10-king/</guid>
      <description>&lt;p&gt;The goal of this level is to break the game defined by the&#xA;&lt;code&gt;King&lt;/code&gt; contract.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;// SPDX-License-Identifier: MIT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;pragma solidity&lt;/span&gt; ^&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;8&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;contract&lt;/span&gt; King {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt; king;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; owner;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; prize;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;constructor&lt;/span&gt;() &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        owner = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        king = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        prize = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;value&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    receive() &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;external&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;value&lt;/span&gt; &amp;gt;= prize || &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt; == owner);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        king.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;transfer&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;value&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        king = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        prize = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;value&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; _king() &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;view&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;returns&lt;/span&gt; (&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;return&lt;/span&gt; king;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here is how the game checks if we passed:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ethernaut, #9 Vault</title>
      <link>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-9-vault/</link>
      <pubDate>Sat, 30 Jul 2022 19:01:00 +0300</pubDate>
      <guid>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-9-vault/</guid>
      <description>&lt;p&gt;We need to unlock the &lt;code&gt;Vault&lt;/code&gt; smart contract to pass the level.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;// SPDX-License-Identifier: MIT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;pragma solidity&lt;/span&gt; ^&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;8&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;contract&lt;/span&gt; Vault {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bool&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; locked;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bytes32&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;private&lt;/span&gt; password;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;constructor&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bytes32&lt;/span&gt; _password) &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        locked = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        password = _password;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; unlock(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bytes32&lt;/span&gt; _password) &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;if&lt;/span&gt; (password == _password) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            locked = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;false&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;analysis&#34;&gt;&#xA;  Analysis&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#analysis&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s look at the state variables:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ethernaut, #8 Force</title>
      <link>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-8-force/</link>
      <pubDate>Fri, 29 Jul 2022 16:29:00 +0300</pubDate>
      <guid>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-8-force/</guid>
      <description>&lt;p&gt;To complete this challenge we need to make the balance of the&#xA;&lt;code&gt;Force&lt;/code&gt; contract greater than zero.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#007f7f&#34;&gt;// SPDX-License-Identifier: MIT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;pragma solidity&lt;/span&gt; ^&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;8&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;contract&lt;/span&gt; Force {&lt;span style=&#34;color:#007f7f&#34;&gt;/*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;                   MEOW ?&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;         /\_/\   /&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;    ____/ o o \&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;  /~____  =ø= /&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt; (______)__m_m)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;*/&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;thoughts&#34;&gt;&#xA;  Thoughts&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#thoughts&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;The contract has nothing in it, except the ASCII-art of a cat.&#xA;It doesn&amp;rsquo;t have a&#xA;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.10/contracts.html#receive-ether-function&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;receive&lt;/a&gt;,&#xA;&lt;a href=&#34;https://docs.soliditylang.org/en/v0.8.10/contracts.html#fallback-function&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;fallback&lt;/a&gt;&#xA;function, or any other&#xA;&lt;a href=&#34;https://solidity-by-example.org/payable/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;payable&lt;/a&gt; function:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ethernaut, #7 Delegation</title>
      <link>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-7-delegation/</link>
      <pubDate>Fri, 29 Jul 2022 13:18:00 +0300</pubDate>
      <guid>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-7-delegation/</guid>
      <description>&lt;p&gt;The goals is to claim the ownership of the &lt;code&gt;Delegate&lt;/code&gt; contract.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;// SPDX-License-Identifier: MIT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;pragma solidity&lt;/span&gt; ^&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;8&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;contract&lt;/span&gt; Delegate {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; owner;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;constructor&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; _owner) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        owner = _owner;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; pwn() &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        owner = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;contract&lt;/span&gt; Delegation {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; owner;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Delegate delegate;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;constructor&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; _delegateAddress) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        delegate = Delegate(_delegateAddress);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        owner = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fallback() &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;external&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bool&lt;/span&gt; result, ) = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt;(delegate).&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;delegatecall&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;data&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;if&lt;/span&gt; (result) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;this&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;analysis&#34;&gt;&#xA;  Analysis&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#analysis&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;We have two contracts: the &lt;code&gt;Delegate&lt;/code&gt; and the &lt;code&gt;Delegation&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ethernaut, #6 Token</title>
      <link>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-6-token/</link>
      <pubDate>Thu, 28 Jul 2022 11:10:00 +0300</pubDate>
      <guid>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-6-token/</guid>
      <description>&lt;p&gt;We start with the 20 tokens. To complete this challenge we need&#xA;to get some more.&lt;/p&gt;&#xA;&lt;p&gt;Here is the original &lt;code&gt;Token&lt;/code&gt; contract:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;// SPDX-License-Identifier: MIT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;pragma solidity&lt;/span&gt; ^&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;6&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;contract&lt;/span&gt; Token {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;mapping&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; =&amp;gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt;) balances;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; totalSupply;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;constructor&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt; _initialSupply) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        balances[&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;] = totalSupply = _initialSupply;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; transfer(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; _to, &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt; _value) &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;returns&lt;/span&gt; (&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bool&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;require&lt;/span&gt;(balances[&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;] - _value &amp;gt;= &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        balances[&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;] -= _value;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        balances[_to] += _value;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; balanceOf(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; _owner) &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;view&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;returns&lt;/span&gt; (&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;balance&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;return&lt;/span&gt; balances[_owner];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;analysis&#34;&gt;&#xA;  Analysis&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#analysis&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s go line by line and see what we can come up with.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ethernaut, #5 Telephone</title>
      <link>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-5-telephone/</link>
      <pubDate>Tue, 26 Jul 2022 15:47:00 +0300</pubDate>
      <guid>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-5-telephone/</guid>
      <description>&lt;p&gt;We need to claim ownership of the contract below to complete&#xA;this level:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;// SPDX-License-Identifier: MIT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;pragma solidity&lt;/span&gt; ^&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;8&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;contract&lt;/span&gt; Telephone {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; owner;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;constructor&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        owner = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; changeOwner(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; _owner) &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;tx&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;origin&lt;/span&gt; != &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            owner = _owner;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;analysis&#34;&gt;&#xA;  Analysis&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#analysis&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;changeOwner&lt;/code&gt; function requires that &lt;code&gt;tx.origin != msg.sender&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;We know that &lt;code&gt;tx.origin&lt;/code&gt; always refers to the EOA (externally&#xA;owned account) that started the transaction irrespective of the&#xA;stack of contracts invoked:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ethernaut, #4 Coin Flip</title>
      <link>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-4-coin-flip/</link>
      <pubDate>Tue, 26 Jul 2022 10:25:00 +0300</pubDate>
      <guid>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-4-coin-flip/</guid>
      <description>&lt;p&gt;To complete this challenge we need to predict the outcome of a&#xA;coin flip game 10 times in a row. Here is the slightly altered&#xA;version of the original smart contract:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;// SPDX-License-Identifier: MIT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;pragma solidity&lt;/span&gt; ^&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;8&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;contract&lt;/span&gt; CoinFlip {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; consecutiveWins;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt; lastHash;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt; FACTOR =&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;57896044618658097711785492504343953926634992332820282019728792003956564819968&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;constructor&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        consecutiveWins = &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; flip(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bool&lt;/span&gt; _guess) &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;returns&lt;/span&gt; (&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bool&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt; blockValue = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;blockhash&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;block&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;number&lt;/span&gt; - &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;1&lt;/span&gt;));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;if&lt;/span&gt; (lastHash == blockValue) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;revert&lt;/span&gt;();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        lastHash = blockValue;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt; coinFlip = blockValue / FACTOR;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;bool&lt;/span&gt; side = coinFlip == &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;1&lt;/span&gt; ? &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;true&lt;/span&gt; : &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;false&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;if&lt;/span&gt; (side == _guess) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            consecutiveWins++;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;true&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        } &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            consecutiveWins = &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;false&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;analysis&#34;&gt;&#xA;  Analysis&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#analysis&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;CoinFlip&lt;/code&gt; contract has 3 state variables:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ethernaut, #3 Fallout</title>
      <link>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-3-fallout/</link>
      <pubDate>Mon, 25 Jul 2022 15:53:00 +0300</pubDate>
      <guid>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-3-fallout/</guid>
      <description>&lt;p&gt;To complete this level we need to become owner of the contract&#xA;below (slightly modified to be compatible with Solidity &lt;code&gt;^0.8.2&lt;/code&gt;):&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;// SPDX-License-Identifier: MIT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;pragma solidity&lt;/span&gt; ^&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;8&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;openzeppelin/utils/math/SafeMath.sol&amp;#34;&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;contract&lt;/span&gt; Fallout {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;using&lt;/span&gt; SafeMath &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;mapping&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; =&amp;gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt;) allocations;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; owner;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#007f7f&#34;&gt;/* constructor */&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; Fal1out() &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        owner = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        allocations[owner] = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;value&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;modifier&lt;/span&gt; onlyOwner() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt; == owner, &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;caller is not the owner&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;_&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; allocate() &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        allocations[&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;] = allocations[&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;].add(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;value&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; sendAllocation(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt; allocator) &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;require&lt;/span&gt;(allocations[allocator] &amp;gt; &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        allocator.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;transfer&lt;/span&gt;(allocations[allocator]);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; collectAllocations() &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; onlyOwner {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;).&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;transfer&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;this&lt;/span&gt;).&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;balance&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; allocatorBalance(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; allocator) &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;view&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;returns&lt;/span&gt; (&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;return&lt;/span&gt; allocations[allocator];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I&amp;rsquo;ll skip the &lt;code&gt;FalloutFactory&lt;/code&gt; contract because it is almost&#xA;identical to the &lt;code&gt;FallbackFactory&lt;/code&gt; from the previous challenge,&#xA;except that in its &lt;code&gt;validateInstance&lt;/code&gt; function it only checks&#xA;that &lt;code&gt;owner() == player&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ethernaut, #2 Fallback</title>
      <link>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-2-fallback/</link>
      <pubDate>Sat, 23 Jul 2022 23:25:00 +0300</pubDate>
      <guid>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-2-fallback/</guid>
      <description>&lt;p&gt;To complete this level we need become the owner of the contract&#xA;and reduce its balance to zero.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-solidity&#34; data-lang=&#34;solidity&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;// SPDX-License-Identifier: MIT&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#007f7f&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;pragma solidity&lt;/span&gt; ^&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;8&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;contract&lt;/span&gt; Fallback {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;mapping&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; =&amp;gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt;) &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; contributions;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; owner;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;constructor&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        owner = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        contributions[&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;] = &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;1000&lt;/span&gt; * (&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;ether&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;modifier&lt;/span&gt; onlyOwner() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt; == owner, &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;caller is not the owner&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;_&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; contribute() &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;value&lt;/span&gt; &amp;lt; &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;.&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;001&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;ether&lt;/span&gt;, &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;msg.value must be &amp;lt; 0.001&amp;#34;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        contributions[&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;] += &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;value&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;if&lt;/span&gt; (contributions[&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;] &amp;gt; contributions[owner]) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            owner = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; getContribution() &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;view&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;returns&lt;/span&gt; (&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;uint256&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;return&lt;/span&gt; contributions[&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;function&lt;/span&gt; withdraw() &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;public&lt;/span&gt; onlyOwner {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        owner.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;transfer&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;address&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;this&lt;/span&gt;).&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;balance&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    receive() &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;external&lt;/span&gt; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;require&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;value&lt;/span&gt; &amp;gt; &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; contributions[&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;] &amp;gt; &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;0&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        owner = &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;payable&lt;/span&gt;(&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;msg&lt;/span&gt;.&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;sender&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I&amp;rsquo;ve modified the original level code and removed the &lt;code&gt;SafeMath&lt;/code&gt;&#xA;usage since we&amp;rsquo;re using &lt;code&gt;solidity ^0.8.2&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ethernaut, #1 Hello Ethernaut</title>
      <link>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-1-hello/</link>
      <pubDate>Thu, 21 Jul 2022 14:48:00 +0300</pubDate>
      <guid>https://vyorkin.org/posts/ctf-walkthrough-ethernaut-1-hello/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;https://vyorkin.org/ox-hugo/ethernaut-hello.jpg&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h2 id=&#34;intro&#34;&gt;&#xA;  Intro&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#intro&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://ethernaut.openzeppelin.com/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The Ethernaut&lt;/a&gt; CTF game&#xA;exists for more than 3 years already and has 26 challenges. The&#xA;first one is a kind of introductory challenge that gives you&#xA;steps on what you need to set up. If you have&#xA;&lt;a href=&#34;https://metamask.io/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Metamask&lt;/a&gt; and open the browser&amp;rsquo;s&#xA;console, you should see greeting messages:&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://vyorkin.org/ox-hugo/ethernaut-console.png&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;h2 id=&#34;set-up&#34;&gt;&#xA;  Set up&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#set-up&#34;&gt;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;Originally, this game runs on the Rinkeby test network, but&#xA;we&amp;rsquo;re going to play it locally. As I mentioned in the&#xA;&lt;a href=&#34;https://vyorkin.org/posts/ctf-walkthrough-intro&#34; &gt;first post&lt;/a&gt;, we will use&#xA;&lt;a href=&#34;https://book.getfoundry.sh/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Foundry&lt;/a&gt; toolchain and here is&#xA;the initial/empty project layout:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
