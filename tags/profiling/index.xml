<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Profiling on transcendental kyberautism</title>
    <link>http://localhost:1313/tags/profiling/</link>
    <description>Recent content in Profiling on transcendental kyberautism</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Sat, 28 Sep 2019 20:25:00 +0300</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/profiling/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Instrumenting and profiling OCaml programs</title>
      <link>http://localhost:1313/posts/instrumenting-and-profiling-ocaml/</link>
      <pubDate>Sat, 28 Sep 2019 20:25:00 +0300</pubDate>
      <guid>http://localhost:1313/posts/instrumenting-and-profiling-ocaml/</guid>
      <description>Intro Link to heading Profiling is rather a large topic, but basically it allows us to learn where the program spent its time and which functions called which other functions during its execution. We use that information to understand which pieces of our program are slower than we expected.&#xA;Note the difference between profiling and benchmarking: we use (micro-)benchmarking to estimate the cost of executing an individual isolated pieces of code, but we use profiling to understand to properties of the whole program and possibly find the hot spots.</description>
    </item>
  </channel>
</rss>
